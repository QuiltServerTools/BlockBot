[bot]
# Discord Bot token
token = ""
# Discord guild/server id
guild =

    # Channel IDs for the bot to use. Only the `chat` channel is required, others can be added or deleted
    [bot.channels]
    # Chat relay channel
    chat =
    # Console relay channel (can be deleted)
    console =

[ChatRelay]
# Allow Minecraft chat to mention/ping users and roles
allowMentions = true
# Convert Discord formatting to Minecraft formatting
convertMarkdown = true
# Try to escape player markdown sent in game
escapeIngameMarkdown = false

    [ChatRelay.MinecraftFormat]
    # Discord -> Minecraft message format
    # Placeholders: {sender}, {sender_colored}, {top_role}, {message}
    # Supports Simplified Text Format and Placeholder API with server context
    messageFormat = "[<color:#7289DA>Discord</color> | {sender_colored}] {message}"
    # Discord -> Minecraft reply format
    # Placeholders: {sender}, {summary}
    # Supports Simplified Text Format and Placeholder API with server context
    replyFormat = "<gray>(Replying to @{sender}: {summary})</gray>"
    # Try to add images to messages
    appendImages = false
    # Use image interpolation
    imageInterpolation = false

    # Used when not using Webhook
    [ChatRelay.DiscordMessageFormat]

    # Placeholders: {sender}, {sender_display}, {message}
    # Supports Discord markdown and Placeholder API with player context
    # Minecraft -> Discord message format
    messageFormat = "{sender_display} » {message}"
    # Minecraft -> Discord annoucement format (/say)
    announcementFormat = "{sender_display} » **{message}**"
    # Minecraft -> Discord emote format (/me)
    emoteFormat = "*{sender_display} {message}*"

    # Supports Discord markdown and Placeholder API with player context
    playerJoin = "%player:displayname% joined the game"
    playerLeave = "%player:displayname% left the game"
    # Placeholders: {message}
    playerDeath = "{message}"
    # Placeholders: {advancement}
    playerAdvancement = "%player:displayname% has made the advancement [{advancement}]"

    serverStart = ":green_circle: Server Started"
    serverStop = ":octagonal_sign: Server Stopped"

    [ChatRelay.Webhook]
    # Use a webhook (less compact) to display player names and avatars
    useWebhook = true
    # Name of the webhook for messages not from players
    webhookName = "Server"
    # URL for the webhook avatar for messages not from players
    webhookAvatar = "https://i.imgur.com/IxPg1R2.png"
    # URL to get the webhook avatar from for players
    playerAvatarUrl = "https://cravatar.eu/helmavatar/{uuid}/128.png?{texture}"

    # Placeholders: {sender}, {sender_display}, {message}
    # Supports Discord markdown and Placeholder API with player context
    # Used when using Webhook
    [ChatRelay.DiscordWebhookFormat]
    messageFormat = "{message}"
    announcementFormat = "**{message}**"
    emoteFormat = "*{sender} {message}*"
    # Placeholders: {sender}, {sender_display}
    authorFormat = "{sender}"

[ConsoleRelay]
# Format to use for the console relay
pattern = "[%level] (%logger{1}) %msg%n"
# Minium logger level to show in the console relay. OFF, FATAL, ERROR, WARN, INFO, DEBUG, TRACE, ALL
minLevel = "INFO"
# Require administator on Discord to use console
requireAdmin = true

[InlineCommands]
# Enables the /mc Discord slash command to run in game commands from Discord
enabled = true
# Comma seperated list of the role ID's allowed to use the command
allowedRoles = []
# OP permission level to restrict commands
opLevel = 3

[Presence]
# The type of presence. Can be "Game", "Listening", "Watching", "Competing", "Disabled"
# Updates every 400 ticks (20 seconds)
activityType = "Game"
activityText = "Minecraft | %server:online%/%server:max_players%"

[MemberCommands]
    [MemberCommands.PlayerList]
    # Enables the playerlist Discord slash command to get the players online
    enabled = true
    name = "playerlist"
    description = "Gets the online players"
    # Supports Discord markdown and Placeholder API with server context
    title = "%server:online%/%server:max_players%"
    # Supports Discord markdown and Placeholder API with player context
    playerFormat = "%player:name%"

    [MemberCommands.WhiteList]
    # Enables the whitelist Discord slash command to allow Discord users to whitelist players
    enabled = false
    name = "whitelist"
    description = "Whitelist a player"
        # Messages for the whitelist Discord slash command
        [MemberCommands.WhiteList.Messages]
        unknownPlayer = "Unknown player: {player}"
        alreadyWhiteListed = "Player already whitelisted"
        successful = "Whitelisted {player}"
        [MemberCommands.WhiteList.PlayerArgument]
        name = "username"
        description = "The username of the player to whitelist"

[Linking]
# Enable account linking between Minecraft and Discord. Enables /link in game and in Discord
enabled = false
# Requires a linked account to join (Like a whitelist) Shows linking code on disconnect screen
requireLinking = false
# Sync the linked users Discord nickname to their Minecraft username
nicknameSync = false
# Comma seperated list of role ID's allowed to join the server. Leave blank to allow any linked account to join. Also restricts /link command in Discord
requiredRoles = []
# A map of role ID's and Minecraft group ID's. Syncs roles if the player has blockbot.sync.<group_id> permission
syncedRoles = {}
# Require linked players to be in the main Discord
requireInServer = false
# Message to show when linked players try to join without the required role
requiredRoleDisconnectMessage = "<red>You don't have the required Discord role to join"
# Message to show when unlinked players try to join and requireLinking is true
unlinkedDisconnectMessage = [
    "<yellow>A linked Discord account is required to join",
    "<yellow>Use <gray>/link</gray> in Discord to link your account",
    "<gray>Link Code: <green><bold>{code}",
    "<gray>Discord: <blue><underline>discord.gg/INVITECODE"
]
# Message to inform players they must be in the Discord server to join
notInServerMessage = "<red>You must be in the Discord server to join"
    # Messages for the /link Minecraft and Discord commands
    [Linking.Messages]
    noLinkedAccounts = "<red>There are no matching linked accounts"
    alreadyLinked = "<red>This account is already linked to <blue>{user}"
    failedUnlink = "<red>Failed to unlink these accounts!"
    successfulUnlink = "<blue>Successfully unlinked your account"
    successfulLink = "Account successfully linked to: {player}"
    linkCode = "<blue>Link your account with <gray>/link</gray> in Discord. Code: <green><bold>{code}"
